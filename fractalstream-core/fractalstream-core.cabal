cabal-version:       3.0
name:                fractalstream-core
version:             2.0.0.0
synopsis:            Tool for dynamical systems research.
description:         Dynamical system visualization
license:             BSD-3-Clause
license-file:        LICENSE
author:              Matt Noonan
maintainer:          matt.noonan@gmail.com
copyright:           2021, Matt Noonan
category:            Math
build-type:          Simple

common FractalStream-common
  ghc-options:         -Wall -Werror -O2
  -- This is basically the list of extensions from
  -- https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/
  -- with a few minor additions like ViewPatterns.
  -- I also switch on RecordWildCards because I like it: it lets you bring
  -- all fields of a record into scope, giving some of the flavor of an OOP
  -- language with member variables automatically in scope of object methods.
  default-extensions:  ApplicativeDo
                     , BangPatterns
                     , ConstraintKinds
                     , DataKinds
                     , DefaultSignatures
                     , DeriveFoldable
                     , DeriveFunctor
                     , DeriveGeneric
                     , DeriveLift
                     , DeriveTraversable
                     , DerivingStrategies
                     , EmptyCase
                     , ExistentialQuantification
                     , FlexibleContexts
                     , FlexibleInstances
                     , FunctionalDependencies
                     , GADTs
                     , GeneralizedNewtypeDeriving
                     , InstanceSigs
                     , KindSignatures
                     , LambdaCase
                     , MultiParamTypeClasses
                     , MultiWayIf
                     , NamedFieldPuns
                     , PatternSynonyms
                     , RankNTypes
                     , RecordWildCards
                     , ScopedTypeVariables
                     , StandaloneDeriving
                     , TupleSections
                     , TypeApplications
                     , TypeFamilies
                     , TypeFamilyDependencies
                     , TypeOperators
                     , ViewPatterns
  default-language:    Haskell2010

library
  import: FractalStream-common
  exposed-modules:
                       -- Color.Colorize
                       -- Exec.LLVM
                       -- Exec.Haskell
                       -- Exec.Placeholder
                       -- Exec.Region
                       -- Exec.Tasking.Block
                       -- Exec.Tasking.Manager
                       -- FractalStream.Models
                       -- Lang.Component
                       -- Lang.Expr
                       -- Lang.Expr.Print
                       -- Lang.Expr.Transform
                       -- Lang.Expr.Typing
                       -- Lang.Numbers
                       -- Lang.Parse.Expr
                       -- Lang.Planar
                       -- Utilities
                       -- Utils.Concurrent

                       UI

                       Backend

                       Actor
                       Actor.Viewer
                       Actor.Tool
                       Actor.Settings

                       Event

                       Task.Concurrent
                       Task.Block

                       Language.Code
                       Language.Code.Simulator
                       Language.Code.Parser
                       Language.Type
                       Language.Environment
                       Language.Value
                       Language.Value.Evaluator
                       Language.Value.Parser
                       Language.Effect
                       Language.Effect.Output
                       Language.Effect.Draw
                       Language.Effect.Render
                       Language.Effect.ThrowEvent
                       Language.Parser

                       Data.Indexed.Functor
                       Data.Planar
                       Data.Color

                       Utilities

  build-depends:       base >=4.8 && <5,
                       random,
                       array,
                       async,
                       containers,
                       constraints,
                       Earley,
                       megaparsec,
                       parser-combinators,
                       mtl,
                       time,
                       monad-parallel,
                       monad-par,
                       monad-par-extras,
                       bytestring,
                       vector,
                       first-class-families,
  hs-source-dirs:      src

-- executable FractalStream
--   import: FractalStream-common
--   ghc-options:         -Wall -Werror -O2 -threaded -rtsopts -with-rtsopts=-N
--   main-is:             Main.hs
--   other-modules:       UI.Tile
--                        UI.WxWidgets
--                        UI.WX.Viewer
--   build-depends:       base >=4.8 && <5,
--                        FractalStream,
--                        random,
--                        array,
--                        wxcore,
--                        wx,
--                        async,
--                        containers,
--                        parsec,
--                        mtl,
--                        recursion-schemes,
--                        llvm-hs,
--                        llvm-hs-pure,
--                        time,
--                        monad-parallel,
--                        monad-par,
--                        monad-par-extras,
--                        bytestring,
--                        vector,
--                        first-class-families
--   hs-source-dirs:      exe
--   extra-lib-dirs:      /usr/local/lib

test-suite spec
  import: FractalStream-common
  hs-source-dirs: test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  build-depends:      base >=4.8 && <5
                    , fractalstream-core
                    , hspec
                    , first-class-families
                    , raw-strings-qq
                    , mtl
  other-modules:      Data.Indexed.FunctorSpec
                    , Language.Value.EvaluatorSpec
                    , Language.Value.ParserSpec
                    , Language.Code.ParserSpec
  build-tool-depends: hspec-discover:hspec-discover == 2.*
